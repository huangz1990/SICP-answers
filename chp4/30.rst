练习 4.30
============

做一个大概的记录，以后补充晚上

# 不是因为作为运算符就是遇到基本运算符而对槽进行强制求值，因此这里的副作用都用到了
# (p1 1) 返回 (1 2)，但是 (p2 1) 仅返回 1，这是由于 p2 中内部函数定义的参数 e 没有被任何基本过程使用，只是作为变量在环境框架中查找其值，但由于是作为参数传递进来的，它被绑定到一个槽，因此，不对它强制求值将只返回这个槽，因此不会产生其想要的副作用
# 强制求值不会影响那些不是槽的对象
# 我个人认为 Cy 的做法更好一些，至少能正确产生副作用。（除非有一种机制能够判断，被传递的参数否具有副作用，而后对有副作用的参数不做 delay，而是强制求值后再作为参数传递。这样的机制可能不难做到，但是另一个问题是，是否这样处理后就一定能保证所有副作用能正确产生呢？仍是一个有待验证的问题）。
 